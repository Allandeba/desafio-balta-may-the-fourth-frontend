@page "/characters"
@using MyTheFourth.Frontend.Pages.Components.Pagination;

@inject ICharactersService CharactersService
@attribute [StreamRendering]

@if (Characters == null)
{
    <StarWarsLoader Text="Carregando..." />
}
else
{
    <Catalog>
        @foreach (var character in Characters)
        {
            <CatalogDetail ImgUrl="@character.ImgUrl" Name="@character.Name" Link="@($"characters/{character.Slug ?? character.Id.ToString()}")" />
        }
    </Catalog>

    <div>
        <input type="button" class="btn-lg btn" id="prev" @onclick="PrevPage" value="Previous" />

        @for (int i = CurPage - 2; i <= CurPage + 2; i++)
        {
            int j = i;
            @if (i > 0)
            {
                @if (i == CurPage)
                {
                    <span class="px-2" style="font-weight: bold; cursor:pointer" @onclick="() => ShowPage(j)">@i</span>
                }
                else
                {
                    <span class="px-2" style="cursor:pointer" @onclick="() => ShowPage(j)">@i</span>
                }
            }
        }
        <input type="button" class="btn-lg btn" id="next" @onclick="NextPage" value="Next" />
    </div>
}

@code {
    private IEnumerable<CharacterResume>? Characters = null;
    private int CurPage = 1;

    protected override async Task OnInitializedAsync()
    {
        await ShowPage();
    }

    protected async Task NextPage()
    {
        CurPage++;
        await ShowPage();
    }

    protected async Task ShowPage(int i)
    {
        CurPage = i;
        await ShowPage();
    }

    protected async Task PrevPage()
    {
        if (CurPage > 1)
        {
            CurPage--;
            await ShowPage();
        }
    }

    protected async Task ShowPage()
    {
        Characters = await CharactersService.ListCharactersAsync(CurPage);
    }
}
